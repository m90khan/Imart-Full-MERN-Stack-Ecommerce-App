[{"D:\\Projects\\Imart\\imart-app\\frontend\\src\\index.js":"1","D:\\Projects\\Imart\\imart-app\\frontend\\src\\reportWebVitals.js":"2","D:\\Projects\\Imart\\imart-app\\frontend\\src\\App.js":"3","D:\\Projects\\Imart\\imart-app\\frontend\\src\\components\\Footer.js":"4","D:\\Projects\\Imart\\imart-app\\frontend\\src\\components\\Header.js":"5","D:\\Projects\\Imart\\imart-app\\frontend\\src\\screens\\HomeScreen.js":"6","D:\\Projects\\Imart\\imart-app\\frontend\\src\\data\\products.js":"7","D:\\Projects\\Imart\\imart-app\\frontend\\src\\components\\Product.js":"8","D:\\Projects\\Imart\\imart-app\\frontend\\src\\components\\Rating.js":"9","D:\\Projects\\Imart\\imart-app\\frontend\\src\\screens\\ProductScreen.js":"10","D:\\Projects\\Imart\\imart-app\\frontend\\src\\store.js":"11","D:\\Projects\\Imart\\imart-app\\frontend\\src\\redux\\constants\\productConstants.js":"12","D:\\Projects\\Imart\\imart-app\\frontend\\src\\redux\\reducers\\productReducers.js":"13","D:\\Projects\\Imart\\imart-app\\frontend\\src\\redux\\actions\\productActions.js":"14","D:\\Projects\\Imart\\imart-app\\frontend\\src\\components\\Message.js":"15","D:\\Projects\\Imart\\imart-app\\frontend\\src\\components\\Loader.js":"16","D:\\Projects\\Imart\\imart-app\\frontend\\src\\screens\\CartScreen.js":"17","D:\\Projects\\Imart\\imart-app\\frontend\\src\\redux\\reducers\\cartReducers.js":"18","D:\\Projects\\Imart\\imart-app\\frontend\\src\\redux\\constants\\cartConstants.js":"19","D:\\Projects\\Imart\\imart-app\\frontend\\src\\redux\\actions\\cartActions.js":"20","D:\\Projects\\Imart\\imart-app\\frontend\\src\\redux\\reducers\\userReducers.js":"21","D:\\Projects\\Imart\\imart-app\\frontend\\src\\redux\\constants\\userConstants.js":"22","D:\\Projects\\Imart\\imart-app\\frontend\\src\\screens\\LoginScreen.js":"23","D:\\Projects\\Imart\\imart-app\\frontend\\src\\components\\FormContainer.js":"24","D:\\Projects\\Imart\\imart-app\\frontend\\src\\redux\\actions\\userActions.js":"25","D:\\Projects\\Imart\\imart-app\\frontend\\src\\screens\\RegisterScreen.js":"26","D:\\Projects\\Imart\\imart-app\\frontend\\src\\screens\\ProfileScreen.js":"27","D:\\Projects\\Imart\\imart-app\\frontend\\src\\screens\\ShippingScreen.js":"28","D:\\Projects\\Imart\\imart-app\\frontend\\src\\components\\CheckoutSteps.js":"29","D:\\Projects\\Imart\\imart-app\\frontend\\src\\screens\\PaymentScreen.js":"30","D:\\Projects\\Imart\\imart-app\\frontend\\src\\screens\\PlaceOrderScreen.js":"31","D:\\Projects\\Imart\\imart-app\\frontend\\src\\redux\\reducers\\orderReducers.js":"32","D:\\Projects\\Imart\\imart-app\\frontend\\src\\redux\\constants\\orderConstants.js":"33","D:\\Projects\\Imart\\imart-app\\frontend\\src\\redux\\actions\\orderActions.js":"34","D:\\Projects\\Imart\\imart-app\\frontend\\src\\screens\\OrderScreen.js":"35","D:\\Projects\\Imart\\imart-app\\frontend\\src\\screens\\UserListScreen.js":"36","D:\\Projects\\Imart\\imart-app\\frontend\\src\\screens\\UserEditScreen.js":"37"},{"size":675,"mtime":1607241377072,"results":"38","hashOfConfig":"39"},{"size":362,"mtime":499162500000,"results":"40","hashOfConfig":"39"},{"size":1854,"mtime":1607442144859,"results":"41","hashOfConfig":"39"},{"size":331,"mtime":1607048475243,"results":"42","hashOfConfig":"39"},{"size":3219,"mtime":1607439096977,"results":"43","hashOfConfig":"39"},{"size":1436,"mtime":1607322782453,"results":"44","hashOfConfig":"39"},{"size":2490,"mtime":1607189304533,"results":"45","hashOfConfig":"46"},{"size":865,"mtime":1607207218032,"results":"47","hashOfConfig":"39"},{"size":873,"mtime":1607189445077,"results":"48","hashOfConfig":"39"},{"size":4353,"mtime":1607238824233,"results":"49","hashOfConfig":"39"},{"size":1963,"mtime":1607442446270,"results":"50","hashOfConfig":"39"},{"size":1567,"mtime":1607444251754,"results":"51","hashOfConfig":"39"},{"size":1028,"mtime":1607230085074,"results":"52","hashOfConfig":"39"},{"size":5659,"mtime":1607444417403,"results":"53","hashOfConfig":"39"},{"size":279,"mtime":1607229479842,"results":"54","hashOfConfig":"39"},{"size":408,"mtime":1607229364901,"results":"55","hashOfConfig":"39"},{"size":3803,"mtime":1607245259001,"results":"56","hashOfConfig":"39"},{"size":1253,"mtime":1607405364216,"results":"57","hashOfConfig":"39"},{"size":242,"mtime":1607404833932,"results":"58","hashOfConfig":"39"},{"size":1847,"mtime":1607405390747,"results":"59","hashOfConfig":"39"},{"size":3653,"mtime":1607442436911,"results":"60","hashOfConfig":"39"},{"size":1536,"mtime":1607437627412,"results":"61","hashOfConfig":"39"},{"size":2282,"mtime":1607330188935,"results":"62","hashOfConfig":"39"},{"size":350,"mtime":1607302577460,"results":"63","hashOfConfig":"39"},{"size":7114,"mtime":1607442021753,"results":"64","hashOfConfig":"39"},{"size":3240,"mtime":1607403282289,"results":"65","hashOfConfig":"39"},{"size":5625,"mtime":1607434885523,"results":"66","hashOfConfig":"39"},{"size":2604,"mtime":1607404228573,"results":"67","hashOfConfig":"39"},{"size":1298,"mtime":1607404372270,"results":"68","hashOfConfig":"39"},{"size":1836,"mtime":1607430669852,"results":"69","hashOfConfig":"39"},{"size":5436,"mtime":1607417309900,"results":"70","hashOfConfig":"39"},{"size":2456,"mtime":1607435309235,"results":"71","hashOfConfig":"39"},{"size":1286,"mtime":1607433775776,"results":"72","hashOfConfig":"39"},{"size":3993,"mtime":1607434082422,"results":"73","hashOfConfig":"39"},{"size":8397,"mtime":1607430995153,"results":"74","hashOfConfig":"39"},{"size":2874,"mtime":1607443611449,"results":"75","hashOfConfig":"39"},{"size":3299,"mtime":1607443559769,"results":"76","hashOfConfig":"39"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},"pn4tku",{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"qhs3bv",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"79"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"79"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"79"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Projects\\Imart\\imart-app\\frontend\\src\\index.js",[],["156","157"],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\reportWebVitals.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\App.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\components\\Footer.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\components\\Header.js",["158","159"],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\screens\\HomeScreen.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\data\\products.js",[],["160","161"],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\components\\Product.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\components\\Rating.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\screens\\ProductScreen.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\store.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\redux\\constants\\productConstants.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\redux\\reducers\\productReducers.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\redux\\actions\\productActions.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\components\\Message.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\components\\Loader.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\screens\\CartScreen.js",["162","163"],"import React, { useState, useEffect } from 'react';\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { addToCart, removeFromCart } from '../redux/actions/cartActions';\r\n\r\nconst CartScreen = (props) => {\r\n  const { match, location, history } = props;\r\n  const productId = match.params.id;\r\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1;\r\n\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty));\r\n    }\r\n  }, [dispatch, productId, qty]);\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id));\r\n  };\r\n\r\n  const checkoutHandler = () => {\r\n    history.push('/login?redirect=shipping');\r\n  };\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1 className='py-6'>Shopping Cart</h1>\r\n        {cartItems.length === 0 ? (\r\n          <Message>\r\n            Your cart is empty <Link to='/'>Go Back</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant='flush'>\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.product}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                  </Col>\r\n                  <Col md={2}>${item.price}</Col>\r\n                  <Col md={2}>\r\n                    <Form.Control\r\n                      as='select'\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(addToCart(item.product, Number(e.target.value)))\r\n                      }\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map((val) => (\r\n                        <option key={val + 1} value={val + 1}>\r\n                          {val + 1}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <Button\r\n                      type='button'\r\n                      variant='light'\r\n                      onClick={() => removeFromCartHandler(item.product)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={4}>\r\n        <Card style={{ marginTop: '6rem' }}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h5>\r\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items\r\n              </h5>\r\n              <h6 className='text-secondary'>\r\n                {' '}\r\n                $\r\n                {cartItems\r\n                  .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                  .toFixed(2)}\r\n              </h6>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Button\r\n                type='button'\r\n                className='btn-block'\r\n                disabled={cartItems.length === 0}\r\n                onClick={checkoutHandler}\r\n              >\r\n                Proceed To Checkout\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default CartScreen;\r\n","D:\\Projects\\Imart\\imart-app\\frontend\\src\\redux\\reducers\\cartReducers.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\redux\\constants\\cartConstants.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\redux\\actions\\cartActions.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\redux\\reducers\\userReducers.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\redux\\constants\\userConstants.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\screens\\LoginScreen.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\components\\FormContainer.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\redux\\actions\\userActions.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\screens\\RegisterScreen.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\screens\\ProfileScreen.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\screens\\ShippingScreen.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\components\\CheckoutSteps.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\screens\\PaymentScreen.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\screens\\PlaceOrderScreen.js",["164"],"import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport { createOrder } from '../redux/actions/orderActions';\r\nimport { createStore } from 'redux';\r\n// import { ORDER_CREATE_RESET } from '../redux/constants/orderConstants';\r\n// import { USER_DETAILS_RESET } from '../redux/constants/userConstants';\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  if (!cart.shippingAddress.address) {\r\n    history.push('/shipping');\r\n  } else if (!cart.paymentMethod) {\r\n    history.push('/payment');\r\n  }\r\n  //  Calculate prices and add them to cart object\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2);\r\n  };\r\n\r\n  cart.itemsPrice = addDecimals(\r\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n  );\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice < 500 ? 0 : 50);\r\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)));\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2);\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { success, error, order } = orderCreate;\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`);\r\n      // dispatch({ type: USER_DETAILS_RESET });\r\n      //   dispatch({ type: ORDER_CREATE_RESET });\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [history, success]);\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address: </strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}{' '}\r\n                {cart.shippingAddress.postalCode}, {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <strong>Method: </strong>\r\n              {cart.paymentMethod}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your cart is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image src={item.image} alt={item.name} fluid rounded />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type='button'\r\n                  className='btn-block'\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","D:\\Projects\\Imart\\imart-app\\frontend\\src\\redux\\reducers\\orderReducers.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\redux\\constants\\orderConstants.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\redux\\actions\\orderActions.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\screens\\OrderScreen.js",["165","166","167"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../redux/actions/orderActions';\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../redux/constants/orderConstants';\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n  const orderId = match.params.id;\r\n\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { order, loading, error } = orderDetails;\r\n\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n  //   const orderDeliver = useSelector((state) => state.orderDeliver);\r\n  //   const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  if (!loading) {\r\n    //   Calculate prices\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2);\r\n    };\r\n\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login');\r\n    }\r\n\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get('/api/config/paypal');\r\n      const script = document.createElement('script');\r\n      script.type = 'text/javascript';\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n      script.async = true;\r\n      script.onload = () => {\r\n        setSdkReady(true);\r\n      };\r\n      document.body.appendChild(script);\r\n    };\r\n\r\n    if (!order || successPay || order._id !== orderId) {\r\n      // dispatch reset here instead of action\r\n      dispatch({ type: ORDER_PAY_RESET });\r\n      //   dispatch({ type: ORDER_DELIVER_RESET });\r\n      dispatch(getOrderDetails(orderId));\r\n      //if order is not paid, set the script else sdk to true\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript();\r\n      } else {\r\n        setSdkReady(true);\r\n      }\r\n    }\r\n  }, [dispatch, orderId, order, successPay]);\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult);\r\n    dispatch(payOrder(orderId, paymentResult));\r\n  };\r\n\r\n  const deliverHandler = () => {\r\n    // dispatch(deliverOrder(order));\r\n  };\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: </strong> {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>{' '}\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address: </strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\r\n                {order.shippingAddress.postalCode}, {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant='success'>Delivered on {order.deliveredAt}</Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant='success'>Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image src={item.image} alt={item.name} fluid rounded />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n              {/* {loadingDeliver && <Loader />} */}\r\n              {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                <ListGroup.Item>\r\n                  <Button\r\n                    type='button'\r\n                    className='btn btn-block'\r\n                    onClick={deliverHandler}\r\n                  >\r\n                    Mark As Delivered\r\n                  </Button>\r\n                </ListGroup.Item>\r\n              )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;\r\n\r\n// Object  : Results of Payments\r\n// create_time: \"2020-12-08T12:32:28Z\"\r\n// id: \"4TY43469PG5290835\"\r\n// intent: \"CAPTURE\"\r\n// links: Array(1)\r\n// 0:\r\n// href: \"https://api.sandbox.paypal.com/v2/checkout/orders/4TY43469PG5290835\"\r\n// method: \"GET\"\r\n// rel: \"self\"\r\n// title: \"GET\"\r\n// __proto__: Object\r\n// length: 1\r\n// __proto__: Array(0)\r\n// payer:\r\n// address:\r\n// country_code: \"US\"\r\n// __proto__: Object\r\n// email_address: \"sb-xmj8s4012035@personal.example.com\"\r\n// name:\r\n// given_name: \"John\"\r\n// surname: \"Doe\"\r\n// __proto__: Object\r\n// payer_id: \"WHEL8GLMY63C8\"\r\n// __proto__: Object\r\n// purchase_units: Array(1)\r\n// 0:\r\n// amount: {value: \"739.99\", currency_code: \"USD\"}\r\n// payee: {email_address: \"sb-xiywa4007734@business.example.com\", merchant_id: \"WNZLM7RGMMJKJ\"}\r\n// payments: {captures: Array(1)}\r\n// reference_id: \"default\"\r\n// shipping: {name: {…}, address: {…}}\r\n// __proto__: Object\r\n// length: 1\r\n// __proto__: Array(0)\r\n// status: \"COMPLETED\"\r\n// update_time: \"2020-12-08T12:35:02Z\"\r\n// __proto__: Object\r\n","D:\\Projects\\Imart\\imart-app\\frontend\\src\\screens\\UserListScreen.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\screens\\UserEditScreen.js",[],{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","severity":1,"message":"173","line":2,"column":23,"nodeType":"174","messageId":"175","endLine":2,"endColumn":28},{"ruleId":"172","severity":1,"message":"176","line":2,"column":54,"nodeType":"174","messageId":"175","endLine":2,"endColumn":62},{"ruleId":"168","replacedBy":"177"},{"ruleId":"170","replacedBy":"178"},{"ruleId":"172","severity":1,"message":"179","line":1,"column":17,"nodeType":"174","messageId":"175","endLine":1,"endColumn":25},{"ruleId":"172","severity":1,"message":"180","line":6,"column":8,"nodeType":"174","messageId":"175","endLine":6,"endColumn":14},{"ruleId":"172","severity":1,"message":"181","line":8,"column":10,"nodeType":"174","messageId":"175","endLine":8,"endColumn":21},{"ruleId":"172","severity":1,"message":"182","line":9,"column":37,"nodeType":"174","messageId":"175","endLine":9,"endColumn":49},{"ruleId":"172","severity":1,"message":"183","line":10,"column":27,"nodeType":"174","messageId":"175","endLine":10,"endColumn":46},{"ruleId":"184","severity":1,"message":"185","line":72,"column":6,"nodeType":"186","endLine":72,"endColumn":44,"suggestions":"187"},"no-native-reassign",["188"],"no-negated-in-lhs",["189"],"no-unused-vars","'Image' is defined but never used.","Identifier","unusedVar","'Dropdown' is defined but never used.",["188"],["189"],"'useState' is defined but never used.","'Loader' is defined but never used.","'createStore' is defined but never used.","'deliverOrder' is defined but never used.","'ORDER_DELIVER_RESET' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.","ArrayExpression",["190"],"no-global-assign","no-unsafe-negation",{"desc":"191","fix":"192"},"Update the dependencies array to be: [dispatch, orderId, order, successPay, userInfo, history]",{"range":"193","text":"194"},[2529,2567],"[dispatch, orderId, order, successPay, userInfo, history]"]