[{"D:\\Projects\\Imart\\imart-app\\frontend\\src\\index.js":"1","D:\\Projects\\Imart\\imart-app\\frontend\\src\\reportWebVitals.js":"2","D:\\Projects\\Imart\\imart-app\\frontend\\src\\App.js":"3","D:\\Projects\\Imart\\imart-app\\frontend\\src\\components\\Footer.js":"4","D:\\Projects\\Imart\\imart-app\\frontend\\src\\components\\Header.js":"5","D:\\Projects\\Imart\\imart-app\\frontend\\src\\screens\\HomeScreen.js":"6","D:\\Projects\\Imart\\imart-app\\frontend\\src\\data\\products.js":"7","D:\\Projects\\Imart\\imart-app\\frontend\\src\\components\\Product.js":"8","D:\\Projects\\Imart\\imart-app\\frontend\\src\\components\\Rating.js":"9","D:\\Projects\\Imart\\imart-app\\frontend\\src\\screens\\ProductScreen.js":"10","D:\\Projects\\Imart\\imart-app\\frontend\\src\\store.js":"11","D:\\Projects\\Imart\\imart-app\\frontend\\src\\redux\\constants\\productConstants.js":"12","D:\\Projects\\Imart\\imart-app\\frontend\\src\\redux\\reducers\\productReducers.js":"13","D:\\Projects\\Imart\\imart-app\\frontend\\src\\redux\\actions\\productActions.js":"14","D:\\Projects\\Imart\\imart-app\\frontend\\src\\components\\Message.js":"15","D:\\Projects\\Imart\\imart-app\\frontend\\src\\components\\Loader.js":"16","D:\\Projects\\Imart\\imart-app\\frontend\\src\\screens\\CartScreen.js":"17","D:\\Projects\\Imart\\imart-app\\frontend\\src\\redux\\reducers\\cartReducers.js":"18","D:\\Projects\\Imart\\imart-app\\frontend\\src\\redux\\constants\\cartConstants.js":"19","D:\\Projects\\Imart\\imart-app\\frontend\\src\\redux\\actions\\cartActions.js":"20","D:\\Projects\\Imart\\imart-app\\frontend\\src\\redux\\reducers\\userReducers.js":"21","D:\\Projects\\Imart\\imart-app\\frontend\\src\\redux\\constants\\userConstants.js":"22","D:\\Projects\\Imart\\imart-app\\frontend\\src\\screens\\LoginScreen.js":"23","D:\\Projects\\Imart\\imart-app\\frontend\\src\\components\\FormContainer.js":"24","D:\\Projects\\Imart\\imart-app\\frontend\\src\\redux\\actions\\userActions.js":"25","D:\\Projects\\Imart\\imart-app\\frontend\\src\\screens\\RegisterScreen.js":"26","D:\\Projects\\Imart\\imart-app\\frontend\\src\\screens\\ProfileScreen.js":"27","D:\\Projects\\Imart\\imart-app\\frontend\\src\\screens\\ShippingScreen.js":"28","D:\\Projects\\Imart\\imart-app\\frontend\\src\\components\\CheckoutSteps.js":"29","D:\\Projects\\Imart\\imart-app\\frontend\\src\\screens\\PaymentScreen.js":"30","D:\\Projects\\Imart\\imart-app\\frontend\\src\\screens\\PlaceOrderScreen.js":"31","D:\\Projects\\Imart\\imart-app\\frontend\\src\\redux\\reducers\\orderReducers.js":"32","D:\\Projects\\Imart\\imart-app\\frontend\\src\\redux\\constants\\orderConstants.js":"33","D:\\Projects\\Imart\\imart-app\\frontend\\src\\redux\\actions\\orderActions.js":"34","D:\\Projects\\Imart\\imart-app\\frontend\\src\\screens\\OrderScreen.js":"35","D:\\Projects\\Imart\\imart-app\\frontend\\src\\screens\\UserListScreen.js":"36","D:\\Projects\\Imart\\imart-app\\frontend\\src\\screens\\UserEditScreen.js":"37","D:\\Projects\\Imart\\imart-app\\frontend\\src\\screens\\ProductListScreen.js":"38","D:\\Projects\\Imart\\imart-app\\frontend\\src\\screens\\ProductEditScreen.js":"39","D:\\Projects\\Imart\\imart-app\\frontend\\src\\screens\\OrderListScreen.js":"40","D:\\Projects\\Imart\\imart-app\\frontend\\src\\components\\Meta.js":"41","D:\\Projects\\Imart\\imart-app\\frontend\\src\\components\\SearchBox.js":"42","D:\\Projects\\Imart\\imart-app\\frontend\\src\\components\\Paginate.js":"43","D:\\Projects\\Imart\\imart-app\\frontend\\src\\components\\ProductCarousel.js":"44"},{"size":676,"mtime":1608461480003,"results":"45","hashOfConfig":"46"},{"size":362,"mtime":499162500000,"results":"47","hashOfConfig":"46"},{"size":2639,"mtime":1607497417160,"results":"48","hashOfConfig":"46"},{"size":331,"mtime":1607048475243,"results":"49","hashOfConfig":"46"},{"size":3447,"mtime":1608458881445,"results":"50","hashOfConfig":"46"},{"size":1706,"mtime":1608458811386,"results":"51","hashOfConfig":"46"},{"size":2490,"mtime":1607189304533,"results":"52","hashOfConfig":"53"},{"size":865,"mtime":1607207218032,"results":"54","hashOfConfig":"46"},{"size":876,"mtime":1608462432596,"results":"55","hashOfConfig":"46"},{"size":8554,"mtime":1608462902742,"results":"56","hashOfConfig":"46"},{"size":2429,"mtime":1607497334906,"results":"57","hashOfConfig":"46"},{"size":1567,"mtime":1607491214352,"results":"58","hashOfConfig":"46"},{"size":3778,"mtime":1607502925409,"results":"59","hashOfConfig":"46"},{"size":5762,"mtime":1608460031238,"results":"60","hashOfConfig":"46"},{"size":279,"mtime":1607229479842,"results":"61","hashOfConfig":"46"},{"size":438,"mtime":1608459073203,"results":"62","hashOfConfig":"46"},{"size":3803,"mtime":1607245259001,"results":"63","hashOfConfig":"46"},{"size":1253,"mtime":1607405364216,"results":"64","hashOfConfig":"46"},{"size":242,"mtime":1607404833932,"results":"65","hashOfConfig":"46"},{"size":1847,"mtime":1607405390747,"results":"66","hashOfConfig":"46"},{"size":3653,"mtime":1607442436911,"results":"67","hashOfConfig":"46"},{"size":1536,"mtime":1607437627412,"results":"68","hashOfConfig":"46"},{"size":2282,"mtime":1607330188935,"results":"69","hashOfConfig":"46"},{"size":350,"mtime":1607302577460,"results":"70","hashOfConfig":"46"},{"size":7076,"mtime":1608459977734,"results":"71","hashOfConfig":"46"},{"size":3240,"mtime":1607403282289,"results":"72","hashOfConfig":"46"},{"size":5625,"mtime":1607434885523,"results":"73","hashOfConfig":"46"},{"size":2604,"mtime":1607404228573,"results":"74","hashOfConfig":"46"},{"size":1298,"mtime":1607404372270,"results":"75","hashOfConfig":"46"},{"size":1836,"mtime":1607430669852,"results":"76","hashOfConfig":"46"},{"size":5436,"mtime":1607417309900,"results":"77","hashOfConfig":"46"},{"size":3565,"mtime":1607498282850,"results":"78","hashOfConfig":"46"},{"size":1286,"mtime":1607433775776,"results":"79","hashOfConfig":"46"},{"size":5792,"mtime":1607497502467,"results":"80","hashOfConfig":"46"},{"size":8495,"mtime":1607498789977,"results":"81","hashOfConfig":"46"},{"size":2874,"mtime":1607443611449,"results":"82","hashOfConfig":"46"},{"size":3299,"mtime":1607443559769,"results":"83","hashOfConfig":"46"},{"size":4264,"mtime":1607504365698,"results":"84","hashOfConfig":"46"},{"size":6213,"mtime":1607496501802,"results":"85","hashOfConfig":"46"},{"size":2585,"mtime":1607497801504,"results":"86","hashOfConfig":"46"},{"size":525,"mtime":1607500218388,"results":"87","hashOfConfig":"46"},{"size":784,"mtime":1607502107191,"results":"88","hashOfConfig":"46"},{"size":784,"mtime":1607497259201,"results":"89","hashOfConfig":"46"},{"size":1507,"mtime":1608458635212,"results":"90","hashOfConfig":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},"pn4tku",{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"93"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},"qhs3bv",{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"93"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"93"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"93"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},"D:\\Projects\\Imart\\imart-app\\frontend\\src\\index.js",[],["185","186"],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\reportWebVitals.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\App.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\components\\Footer.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\components\\Header.js",["187","188"],"import React from 'react';\r\nimport { Navbar, Nav, Image, Container, NavDropdown, Dropdown } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logout } from '../redux/actions/userActions';\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport SearchBox from './SearchBox';\r\n\r\nconst Header = () => {\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  const dispatch = useDispatch();\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n  };\r\n  return (\r\n    <header>\r\n      <Navbar bg='dark' expand='lg' variant='dark' collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to='/'>\r\n            <Navbar.Brand>\r\n              <strong variant='dark'>iMart</strong>\r\n            </Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n          <Navbar.Collapse id='basic-navbar-nav'>\r\n            <Route render={({ history }) => <SearchBox history={history} />} />\r\n\r\n            <Nav className='ml-auto'>\r\n              <LinkContainer to='/cart'>\r\n                <Nav.Link>\r\n                  <i className='fas fa-shopping-bag'></i> Cart\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n              {userInfo ? (\r\n                <NavDropdown\r\n                  style={{ flexDirection: 'row' }}\r\n                  title={\r\n                    // <div style={{ flexDirection: 'row', width: '100%' }}>\r\n                    //   <Image\r\n                    //     className='thumbnail-image'\r\n                    //     style={{\r\n                    //       height: '2rem',\r\n                    //       borderRadius: '5rem',\r\n                    //       marginRight: '.5rem',\r\n                    //     }}\r\n                    //     src={`/images/${userInfo.data.user.photo}`}\r\n                    //     alt={userInfo.data.user.name}\r\n                    //   />\r\n                    userInfo.data.user.name\r\n                    // </div>\r\n                  }\r\n                  id='username'\r\n                >\r\n                  <LinkContainer to='/profile'>\r\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to='/login'>\r\n                  <Nav.Link>\r\n                    <i className='fas fa-user'></i> Sign In\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n              {userInfo && userInfo.data.user.role === 'admin' && (\r\n                <NavDropdown title='Admin' id='adminmenu'>\r\n                  <LinkContainer to='/admin/userlist'>\r\n                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/productlist'>\r\n                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/orderlist'>\r\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","D:\\Projects\\Imart\\imart-app\\frontend\\src\\screens\\HomeScreen.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\data\\products.js",[],["189","190"],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\components\\Product.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\components\\Rating.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\screens\\ProductScreen.js",["191"],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\store.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\redux\\constants\\productConstants.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\redux\\reducers\\productReducers.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\redux\\actions\\productActions.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\components\\Message.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\components\\Loader.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\screens\\CartScreen.js",["192","193"],"import React, { useState, useEffect } from 'react';\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { addToCart, removeFromCart } from '../redux/actions/cartActions';\r\n\r\nconst CartScreen = (props) => {\r\n  const { match, location, history } = props;\r\n  const productId = match.params.id;\r\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1;\r\n\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty));\r\n    }\r\n  }, [dispatch, productId, qty]);\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id));\r\n  };\r\n\r\n  const checkoutHandler = () => {\r\n    history.push('/login?redirect=shipping');\r\n  };\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1 className='py-6'>Shopping Cart</h1>\r\n        {cartItems.length === 0 ? (\r\n          <Message>\r\n            Your cart is empty <Link to='/'>Go Back</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant='flush'>\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.product}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                  </Col>\r\n                  <Col md={2}>${item.price}</Col>\r\n                  <Col md={2}>\r\n                    <Form.Control\r\n                      as='select'\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(addToCart(item.product, Number(e.target.value)))\r\n                      }\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map((val) => (\r\n                        <option key={val + 1} value={val + 1}>\r\n                          {val + 1}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <Button\r\n                      type='button'\r\n                      variant='light'\r\n                      onClick={() => removeFromCartHandler(item.product)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={4}>\r\n        <Card style={{ marginTop: '6rem' }}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h5>\r\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items\r\n              </h5>\r\n              <h6 className='text-secondary'>\r\n                {' '}\r\n                $\r\n                {cartItems\r\n                  .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                  .toFixed(2)}\r\n              </h6>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Button\r\n                type='button'\r\n                className='btn-block'\r\n                disabled={cartItems.length === 0}\r\n                onClick={checkoutHandler}\r\n              >\r\n                Proceed To Checkout\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default CartScreen;\r\n","D:\\Projects\\Imart\\imart-app\\frontend\\src\\redux\\reducers\\cartReducers.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\redux\\constants\\cartConstants.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\redux\\actions\\cartActions.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\redux\\reducers\\userReducers.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\redux\\constants\\userConstants.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\screens\\LoginScreen.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\components\\FormContainer.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\redux\\actions\\userActions.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\screens\\RegisterScreen.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\screens\\ProfileScreen.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\screens\\ShippingScreen.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\components\\CheckoutSteps.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\screens\\PaymentScreen.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\screens\\PlaceOrderScreen.js",["194"],"import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport { createOrder } from '../redux/actions/orderActions';\r\nimport { createStore } from 'redux';\r\n// import { ORDER_CREATE_RESET } from '../redux/constants/orderConstants';\r\n// import { USER_DETAILS_RESET } from '../redux/constants/userConstants';\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  if (!cart.shippingAddress.address) {\r\n    history.push('/shipping');\r\n  } else if (!cart.paymentMethod) {\r\n    history.push('/payment');\r\n  }\r\n  //  Calculate prices and add them to cart object\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2);\r\n  };\r\n\r\n  cart.itemsPrice = addDecimals(\r\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n  );\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice < 500 ? 0 : 50);\r\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)));\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2);\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { success, error, order } = orderCreate;\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`);\r\n      // dispatch({ type: USER_DETAILS_RESET });\r\n      //   dispatch({ type: ORDER_CREATE_RESET });\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [history, success]);\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address: </strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}{' '}\r\n                {cart.shippingAddress.postalCode}, {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <strong>Method: </strong>\r\n              {cart.paymentMethod}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your cart is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image src={item.image} alt={item.name} fluid rounded />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type='button'\r\n                  className='btn-block'\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","D:\\Projects\\Imart\\imart-app\\frontend\\src\\redux\\reducers\\orderReducers.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\redux\\constants\\orderConstants.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\redux\\actions\\orderActions.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\screens\\OrderScreen.js",["195"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../redux/actions/orderActions';\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../redux/constants/orderConstants';\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n  const orderId = match.params.id;\r\n\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { order, loading, error } = orderDetails;\r\n\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver);\r\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  if (!loading) {\r\n    //   Calculate prices\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2);\r\n    };\r\n\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login');\r\n    }\r\n\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get('/api/config/paypal');\r\n      const script = document.createElement('script');\r\n      script.type = 'text/javascript';\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n      script.async = true;\r\n      script.onload = () => {\r\n        setSdkReady(true);\r\n      };\r\n      document.body.appendChild(script);\r\n    };\r\n\r\n    if (!order || successPay || successDeliver || order._id !== orderId) {\r\n      // dispatch reset here instead of action\r\n      dispatch({ type: ORDER_PAY_RESET });\r\n      dispatch({ type: ORDER_DELIVER_RESET });\r\n      dispatch(getOrderDetails(orderId));\r\n      //if order is not paid, set the script else sdk to true\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript();\r\n      } else {\r\n        setSdkReady(true);\r\n      }\r\n    }\r\n  }, [dispatch, orderId, order, successDeliver, successPay]);\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult);\r\n    dispatch(payOrder(orderId, paymentResult));\r\n  };\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order));\r\n  };\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: </strong> {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>{' '}\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address: </strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\r\n                {order.shippingAddress.postalCode}, {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant='success'>Delivered on {order.deliveredAt}</Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant='success'>Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image src={item.image} alt={item.name} fluid rounded />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n              {loadingDeliver && <Loader />}\r\n              {userInfo &&\r\n                userInfo.data.user.role === 'admin' &&\r\n                order.isPaid &&\r\n                !order.isDelivered && (\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      type='button'\r\n                      className='btn btn-block'\r\n                      onClick={deliverHandler}\r\n                    >\r\n                      Mark As Delivered\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;\r\n\r\n// Object  : Results of Payments\r\n// create_time: \"2020-12-08T12:32:28Z\"\r\n// id: \"4TY43469PG5290835\"\r\n// intent: \"CAPTURE\"\r\n// links: Array(1)\r\n// 0:\r\n// href: \"https://api.sandbox.paypal.com/v2/checkout/orders/4TY43469PG5290835\"\r\n// method: \"GET\"\r\n// rel: \"self\"\r\n// title: \"GET\"\r\n// __proto__: Object\r\n// length: 1\r\n// __proto__: Array(0)\r\n// payer:\r\n// address:\r\n// country_code: \"US\"\r\n// __proto__: Object\r\n// email_address: \"sb-xmj8s4012035@personal.example.com\"\r\n// name:\r\n// given_name: \"John\"\r\n// surname: \"Doe\"\r\n// __proto__: Object\r\n// payer_id: \"WHEL8GLMY63C8\"\r\n// __proto__: Object\r\n// purchase_units: Array(1)\r\n// 0:\r\n// amount: {value: \"739.99\", currency_code: \"USD\"}\r\n// payee: {email_address: \"sb-xiywa4007734@business.example.com\", merchant_id: \"WNZLM7RGMMJKJ\"}\r\n// payments: {captures: Array(1)}\r\n// reference_id: \"default\"\r\n// shipping: {name: {…}, address: {…}}\r\n// __proto__: Object\r\n// length: 1\r\n// __proto__: Array(0)\r\n// status: \"COMPLETED\"\r\n// update_time: \"2020-12-08T12:35:02Z\"\r\n// __proto__: Object\r\n","D:\\Projects\\Imart\\imart-app\\frontend\\src\\screens\\UserListScreen.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\screens\\UserEditScreen.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\screens\\ProductListScreen.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\screens\\ProductEditScreen.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\screens\\OrderListScreen.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\components\\Meta.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\components\\SearchBox.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\components\\Paginate.js",[],"D:\\Projects\\Imart\\imart-app\\frontend\\src\\components\\ProductCarousel.js",[],{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","severity":1,"message":"201","line":2,"column":23,"nodeType":"202","messageId":"203","endLine":2,"endColumn":28},{"ruleId":"200","severity":1,"message":"204","line":2,"column":54,"nodeType":"202","messageId":"203","endLine":2,"endColumn":62},{"ruleId":"196","replacedBy":"205"},{"ruleId":"198","replacedBy":"206"},{"ruleId":"207","severity":1,"message":"208","line":53,"column":6,"nodeType":"209","endLine":53,"endColumn":45,"suggestions":"210"},{"ruleId":"200","severity":1,"message":"211","line":1,"column":17,"nodeType":"202","messageId":"203","endLine":1,"endColumn":25},{"ruleId":"200","severity":1,"message":"212","line":6,"column":8,"nodeType":"202","messageId":"203","endLine":6,"endColumn":14},{"ruleId":"200","severity":1,"message":"213","line":8,"column":10,"nodeType":"202","messageId":"203","endLine":8,"endColumn":21},{"ruleId":"207","severity":1,"message":"214","line":72,"column":6,"nodeType":"209","endLine":72,"endColumn":60,"suggestions":"215"},"no-native-reassign",["216"],"no-negated-in-lhs",["217"],"no-unused-vars","'Image' is defined but never used.","Identifier","unusedVar","'Dropdown' is defined but never used.",["216"],["217"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'product._id'. Either include it or remove the dependency array.","ArrayExpression",["218"],"'useState' is defined but never used.","'Loader' is defined but never used.","'createStore' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.",["219"],"no-global-assign","no-unsafe-negation",{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},"Update the dependencies array to be: [dispatch, match, product._id, successProductReview]",{"range":"224","text":"225"},"Update the dependencies array to be: [dispatch, orderId, order, successDeliver, successPay, userInfo, history]",{"range":"226","text":"227"},[1993,2032],"[dispatch, match, product._id, successProductReview]",[2532,2586],"[dispatch, orderId, order, successDeliver, successPay, userInfo, history]"]